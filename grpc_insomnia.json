{"_type":"export","__export_format":4,"__export_date":"2021-11-29T15:57:06.045Z","__export_source":"insomnia.desktop.app:v2021.6.0","resources":[{"_id":"greq_b013895e7f1a4314aef16db5883d4c30","parentId":"fld_54f92086009c4c4ba6bf43e692330996","modified":1638201394382,"created":1637683996447,"url":"localhost:50051","name":"gRPC (updated)","description":"","protoFileId":"pf_14698d23798d48a2a355d243608ffd47","protoMethodName":"/helloworld.Greeter/SayHello","body":{"text":"{\n\t\"name\":\"aaaa\",\n\t\"foo\": \"bar\",\n\t\"bar\": \"baz\"\n}\n"},"metaSortKey":-1637683996447,"isPrivate":false,"_type":"grpc_request"},{"_id":"fld_54f92086009c4c4ba6bf43e692330996","parentId":"wrk_0c38593a37ec40f782ef9151dd0e307c","modified":1638201383822,"created":1638201383822,"name":"Hello World Example","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1638201383822,"_type":"request_group"},{"_id":"wrk_0c38593a37ec40f782ef9151dd0e307c","parentId":null,"modified":1635962554123,"created":1635959595045,"name":"filfreire/grpc-example-python","description":"","scope":"collection","_type":"workspace"},{"_id":"greq_1c603d15c5794a45a458331e90a5d678","parentId":"fld_54f92086009c4c4ba6bf43e692330996","modified":1638201393901,"created":1635959682784,"url":"localhost:50051","name":"gRPC","description":"","protoFileId":"pf_0488381aa39a4143b7389010d602ab99","protoMethodName":"/helloworld.Greeter/SayHello","body":{"text":"{\n\t\"name\":\"aaaa\",\n\t\"foo\": \"bar\",\n\t\"bar\": \"baz\"\n}\n\n"},"metaSortKey":-1637683996397,"isPrivate":false,"_type":"grpc_request"},{"_id":"greq_70ceba59d634442891ee523389458a8c","parentId":"fld_9f284a1171b84055959343e151fc6ce2","modified":1638201395884,"created":1638200268776,"url":"localhost:50051","name":"gRPC Route guide (unary)","description":"","protoFileId":"pf_f11a2ad5afc3441ba963d94f353af020","protoMethodName":"/routeguide.RouteGuide/GetFeature","body":{"text":"{\n\t\"latitude\":\"409146138\",\n\t\"longitude\":\"-746188906\"\n}"},"metaSortKey":-1638200268776,"isPrivate":false,"_type":"grpc_request"},{"_id":"fld_9f284a1171b84055959343e151fc6ce2","parentId":"wrk_0c38593a37ec40f782ef9151dd0e307c","modified":1638201347079,"created":1638201347079,"name":"Route Guide Example","description":"","environment":{},"environmentPropertyOrder":null,"metaSortKey":-1638201347079,"_type":"request_group"},{"_id":"greq_8e1742bfb73249dd95b732eadeb2481c","parentId":"fld_9f284a1171b84055959343e151fc6ce2","modified":1638201353957,"created":1638200430327,"url":"localhost:50051","name":"gRPC Route guide (server stream)","description":"","protoFileId":"pf_f11a2ad5afc3441ba963d94f353af020","protoMethodName":"/routeguide.RouteGuide/ListFeatures","body":{"text":"{\n\t\"lo\":{\n\t\t\"latitude\":\"400000000\",\n\t\t\"longitude\":\"-750000000\"\n\t},\n\t\"hi\":{\n\t\t\"latitude\":\"420000000\",\n\t\t\"longitude\":\"-730000000\"\n\t}\n}"},"metaSortKey":-1638200268751,"isPrivate":false,"_type":"grpc_request"},{"_id":"greq_3210b5e5ab6a48f28651e8eaf2c5517e","parentId":"fld_9f284a1171b84055959343e151fc6ce2","modified":1638201352646,"created":1638200871429,"url":"localhost:50051","name":"gRPC Route guide (client stream)","description":"","protoFileId":"pf_f11a2ad5afc3441ba963d94f353af020","protoMethodName":"/routeguide.RouteGuide/RecordRoute","body":{"text":"{\n\t\"latitude\":\"415301720\",\n\t\"longitude\":\"-748416257\"\n}"},"metaSortKey":-1638200268726,"isPrivate":false,"_type":"grpc_request"},{"_id":"greq_001ace066a6540ea92576fe5b5c9ee34","parentId":"fld_9f284a1171b84055959343e151fc6ce2","modified":1638201356393,"created":1638201149312,"url":"localhost:50051","name":"gRPC Route guide (bidirectional stream)","description":"","protoFileId":"pf_f11a2ad5afc3441ba963d94f353af020","protoMethodName":"/routeguide.RouteGuide/RouteChat","body":{"text":"{\n\t\"message\": \"test 5\",\n\t\"location\": {\n\t\t\"latitude\":\"415301720\",\n\t\t\"longitude\":\"-748416257\"\t\t\n\t}\n}"},"metaSortKey":-1638200268676,"isPrivate":false,"_type":"grpc_request"},{"_id":"env_d798b39b17a1508adca5790277ae210bbfae15c9","parentId":"wrk_0c38593a37ec40f782ef9151dd0e307c","modified":1635959595049,"created":1635959595049,"name":"Base Environment","data":{},"dataPropertyOrder":null,"color":null,"isPrivate":false,"metaSortKey":1635959595049,"_type":"environment"},{"_id":"jar_d798b39b17a1508adca5790277ae210bbfae15c9","parentId":"wrk_0c38593a37ec40f782ef9151dd0e307c","modified":1635959595050,"created":1635959595050,"name":"Default Jar","cookies":[],"_type":"cookie_jar"},{"_id":"spc_4072261ec7d3406e882a787c7c9ca760","parentId":"wrk_0c38593a37ec40f782ef9151dd0e307c","modified":1635959595046,"created":1635959595046,"fileName":"gRPC experiments","contents":"","contentType":"yaml","_type":"api_spec"},{"_id":"pf_0488381aa39a4143b7389010d602ab99","parentId":"wrk_0c38593a37ec40f782ef9151dd0e307c","modified":1635959676852,"created":1635959676852,"name":"helloworld.proto","protoText":"// Copyright 2015 gRPC authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\noption java_multiple_files = true;\noption java_package = \"io.grpc.examples.helloworld\";\noption java_outer_classname = \"HelloWorldProto\";\noption objc_class_prefix = \"HLW\";\n\npackage helloworld;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n}\n","_type":"proto_file"},{"_id":"pf_14698d23798d48a2a355d243608ffd47","parentId":"wrk_0c38593a37ec40f782ef9151dd0e307c","modified":1637683994727,"created":1637683994727,"name":"helloworld.proto","protoText":"// Copyright 2015 gRPC authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\noption java_multiple_files = true;\noption java_package = \"io.grpc.examples.helloworld\";\noption java_outer_classname = \"HelloWorldProto\";\noption objc_class_prefix = \"HLW\";\n\npackage helloworld;\n\n// The greeting service definition.\nservice Greeter {\n  // Sends a greeting\n  rpc SayHello (HelloRequest) returns (HelloReply) {}\n}\n\n// The request message containing the user's name.\nmessage HelloRequest {\n  string name = 1;\n  string foo = 2;\n  string bar = 3;\n}\n\n// The response message containing the greetings\nmessage HelloReply {\n  string message = 1;\n  string request_metadata = 2;\n  string request_body = 3;\n}\n","_type":"proto_file"},{"_id":"pf_f11a2ad5afc3441ba963d94f353af020","parentId":"wrk_0c38593a37ec40f782ef9151dd0e307c","modified":1638200264686,"created":1638200264686,"name":"route_guide.proto","protoText":"// This code was taken from https://github.com/grpc/grpc\n// Copyright 2015 gRPC authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nsyntax = \"proto3\";\n\noption java_multiple_files = true;\noption java_package = \"io.grpc.examples.routeguide\";\noption java_outer_classname = \"RouteGuideProto\";\noption objc_class_prefix = \"RTG\";\n\npackage routeguide;\n\n// Interface exported by the server.\nservice RouteGuide {\n  // A simple RPC.\n  //\n  // Obtains the feature at a given position.\n  //\n  // A feature with an empty name is returned if there's no feature at the given\n  // position.\n  rpc GetFeature(Point) returns (Feature) {}\n\n  // A server-to-client streaming RPC.\n  //\n  // Obtains the Features available within the given Rectangle.  Results are\n  // streamed rather than returned at once (e.g. in a response message with a\n  // repeated field), as the rectangle may cover a large area and contain a\n  // huge number of features.\n  rpc ListFeatures(Rectangle) returns (stream Feature) {}\n\n  // A client-to-server streaming RPC.\n  //\n  // Accepts a stream of Points on a route being traversed, returning a\n  // RouteSummary when traversal is completed.\n  rpc RecordRoute(stream Point) returns (RouteSummary) {}\n\n  // A Bidirectional streaming RPC.\n  //\n  // Accepts a stream of RouteNotes sent while a route is being traversed,\n  // while receiving other RouteNotes (e.g. from other users).\n  rpc RouteChat(stream RouteNote) returns (stream RouteNote) {}\n}\n\n// Points are represented as latitude-longitude pairs in the E7 representation\n// (degrees multiplied by 10**7 and rounded to the nearest integer).\n// Latitudes should be in the range +/- 90 degrees and longitude should be in\n// the range +/- 180 degrees (inclusive).\nmessage Point {\n  int32 latitude = 1;\n  int32 longitude = 2;\n}\n\n// A latitude-longitude rectangle, represented as two diagonally opposite\n// points \"lo\" and \"hi\".\nmessage Rectangle {\n  // One corner of the rectangle.\n  Point lo = 1;\n\n  // The other corner of the rectangle.\n  Point hi = 2;\n}\n\n// A feature names something at a given point.\n//\n// If a feature could not be named, the name is empty.\nmessage Feature {\n  // The name of the feature.\n  string name = 1;\n\n  // The point where the feature is detected.\n  Point location = 2;\n}\n\n// A RouteNote is a message sent while at a given point.\nmessage RouteNote {\n  // The location from which the message is sent.\n  Point location = 1;\n\n  // The message to be sent.\n  string message = 2;\n}\n\n// A RouteSummary is received in response to a RecordRoute rpc.\n//\n// It contains the number of individual points received, the number of\n// detected features, and the total distance covered as the cumulative sum of\n// the distance between each point.\nmessage RouteSummary {\n  // The number of points received.\n  int32 point_count = 1;\n\n  // The number of known features passed while traversing the route.\n  int32 feature_count = 2;\n\n  // The distance covered in metres.\n  int32 distance = 3;\n\n  // The duration of the traversal in seconds.\n  int32 elapsed_time = 4;\n}\n","_type":"proto_file"}]}